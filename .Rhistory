q()
q()
source('~/ExData_Plotting1/plot1.R')
library(swirl)
swirl()
View(top_counts)
top_count_sorted <- arrange(top_counts,count,desc)
top_counts
top_counts<-filter(pack_sum, count>679)
top_counts
top_count_sorted <- arrange(top_counts,count,desc)
top_count_sorted <- arrange(top_counts,desc(count))
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs = 0.99)
top_unique <- filter(pack_sum,count>465)
top_unique <- filter(pack_sum,unique()>465)
top_unique <- filter(pack_sum,uniqu>465)
top_unique <- filter(pack_sum,unique>465)
top_unique
View(top_unique)
arrange(top_unique,desc(unique()))
arrange(top_unique,desc(unique)
arrange(top_unique,desc(unique))
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
?mutate
submit()
submit()
submit()
submit()
print
submit()
swirl()
quit()
source('~/R/quiz.R')
source('~/R/quiz.R')
q()
set.seed(1)
rpois(5, 2)
rpois(5, 2)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
mean(temp$X)
class(temp)
head(temp)
swirl
swirl()
library(swirl)
install_from_swirl("Statistical Inference")
swirl
swirl()
1
.9
1-(1/13)
0.92307
1-(3/36)
deck
1/52
52
13/52
1/52
4/52
1/4*1/4*1/4*1/4
1/52*1/52*1/52*1/52
info()
skip
skip()
4/52
12/52
0
2/53
3/53
1/53
2/53
2/51
.5*.8
.5*.4
.8*.4
1.5*.4
1.6*.4
4
(1.6*.4)/2
(1.6*.4)/(2*.5)
mypdf
integrate(mypdf,0,1.6)
skip()
(.997)*(.001)
(.985)*(1-.001)
(1-.985)*(1-.001)
(0.984015)/(0.984015)+0.014985
(0.984015)/(0.984015+0.014985)
(.997*.001)/(.997*.001 + .015*.999)
install.packages("UsingR")
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
(8.58-9.31)/5
?mean
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
rbind(x,w)
freq <- rbind(x,w)
mean(freq)
mean((x-0.87625)^2)
freq <-cbind(x,w)
mean(freq)
mse <- mean((freq$x-0.87625)^2)
mse <- mean((x-0.87625)^2)
mse
x2 <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y2 <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
b1 <- cor(x,y)*sd(x)/sd(y)
b1 <- cor(x2,y2)*sd(x)/sd(y)
b0 <- mean(x)-b1*(mean(y))
rbind(c(b0,b1),coef(lm(x~y)))
rbind(c(b0,b1),coef(lm(x2~y2)))
library(datasets)
data("mtcars")
head(mtcars)
b1 <- cor(mtcars$wt,mtcars$mpg)*sd(mtcars$wt)/sd(mtcars$mpg)
b0 <- mean(mtcars$wt)-b1*(mean(mtcars$mpg))
rbind(c(b0,b1),coef(lm(mtcars$wt~mtcars$mpg)))
b1 <- cor(mtcars$mpg,mtcars$wt)*sd(mtcars$mpg)/sd(mtcars$wt)
b0 <- mean(mtcars$mpg)-b1*(mean(mtcars$wt))
rbind(c(b0,b1),coef(lm(mtcars$mpg~mtcars$wt)))
install.packages("shiny")
library(shiny)
library(manipulate)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
dt <- rbind(x,w)
mean(dt)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
mean((x-.573)^2)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
8.58-9.31
-0.73/5
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
dt <- rbind(x,y)
intersect(dt)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
sd(x)
(8.58-9.31)/.07511325
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum((w*(x-0.300))^2)
sum((w*(x-0.0025))^2)
sum((w*(x-0.1471))^2)
sum((w*(x-1.077))^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
rho <- cor(x,y)
rho
lm(x~y)
data(mtcars)
lm(wt~mpg, data=mtcars)
summary(lm(wt~mpg, data=mtcars))
summary(lm(mpg~wt, data=mtcars))
lm(mpg~wt, data=mtcars)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
mx <- mean(x)
my <- mean(y)
rho <- cor(x,y)
sdx <- sd(x)
sdy <- sd(y)
b <- rho*(sdy/sdx)
intercept <- my - b*mx
intercept
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
sd(x)
(8.58-9.31)/0.7511325
data(mtcars)
mean_mpg <- mean(mtcars$mpg)
mean_wt <- mean(mtcars$wt)
sd_mpg <- sd(mtcars$mpg)
sd_wt <- sd(mtcars$wt)
mt_rho <- cor(mtcars$mpg,mtcars$wt)
mt_b <- mt_rho*(sd_mpg/sd_wt)
mt_b
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
mean(x)
mx <- mean(x)
my <- mean(y)
rho <- cor(x,y)
sdx <- sd(x)
sdy <- sd(y)
b <- rho*(sdy/sdx)
intercept <- my - b*mx
b
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w*(x-1.077)^2)
sum(w*(x-0.1471)^2)
sum(w*(x-0.0025)^2)
sum(w*(x-0.300)^2)
install.packages("caret")
library(caret)
library(kernlab)
install.packages("kernlab")
library(kernlab)
data("spam")
int <- createDataPartition(y=spam$type,0.75,list = FALSE)
int <- createDataPartition(y=spam$type,p= 0.75,list = FALSE)
tr <- spam[int,]
te <- spam[-int,]
dim(tr)
ml <- train(type~.,data=tr,method="glm")
ml <- train(type~.,data=tr,method="glm")
head(tr)
ml <- train(type~.,data=tr,method="glm")
install.packages('e1071', dependencies=TRUE)
ml <- train(type~.,data=tr,method="glm")
ml$finalModel
summary(ml)
ml
library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50)
training = adData[trainIndex,]
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
training
testing
library(AppliedPredictiveModeling)
data(concrete)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
head(concrete)
hist(concrete$SuperPlasticizer)
hist(as.numeric(concrete$SuperPlasticizer))
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
head(inTrain)
class(inTrain)
inTrain
colnames(inTrain)
colnames(adData)
IL_col_idx <- grep("^[Ii][Ll].*", names(training))
probj <- preProcess(inTrain[,IL_col_idx],method = c("center","scale","pca"),thresh = 0.9)
IL_col_idx <- grep("^[Ii][Ll].*", names(inTrain))
probj <- preProcess(inTrain[,IL_col_idx],method = c("center","scale","pca"),thresh = 0.9)
probj <- preProcess(training[,IL_col_idx],method = c("center","scale","pca"),thresh = 0.9)
probj <- preProcess(training[,IL_col_idx],method = c(center,scale,pca),thresh = 0.9)
probj <- preProcess(training[,IL_col_idx],method = c("center","scale","pca"),thresh = 0.9)
probj
probj <- preProcess(training[,IL_col_idx],method = c("center","scale","pca"),thresh = 0.8)
summary(probj)
IL_col_idx <- grep("^[Ii][Ll][dia].*", names(inTrain))
probj1 <- preProcess(training[,IL_col_idx],method = c("glm","pca"),thresh = 0.8)
ppois(20,lambda = 16.5*2)
ppois(.2,lambda = 16.5*2)
qnorm(.95,mean=100,sd=10)
ppois(10,lambda = 5*3)
var
c_cov
qnorm(70,mean = 80,sd=10)
qnorm(.7,mean = 80,sd=10)
pnorm(70,mean = 80,sd=10)
qnorm(95,mean = 1100,sd=75)
qnorm(.95,mean = 1100,sd=75)
qnorm(.95,mean = 1100,sd=75,n=100)
qnorm(.95,mean = 1100,sd=75/sqrt(100))
pbinom(4,size = 5,lower.tail = FALSE)
pbinom(4,size = 5,lower.tail = FALSE,prob = .5)
me =.5
sigma = sqrt(1/12)/sqrt(1000)
pbinom(3,size = 5,lower.tail = FALSE,prob = .5)
swirl()
library(swirl)
swirl()
lm(child~parent,data = galton)
fit <- lm(child~parent,data = galton)
summary(fir)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs-rjs
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est)
varEst <- var(galton)
varEst <- var(est(ols.slope,ols.ic))
all.equal(sum(varChild),sum(varEst),varRes)
all.equal(varChild,varEst+varRes)
efit <- lm(accel~mag+dist,attenu)
mean(efit$residuals)
cov(efit$coefficients,attenu$mag)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
cor(gpa_nor,gch_nor)
l_nor <- lm(gch_nor~gpa_nor,galton)
l_nor <- lm(gch_nor~gpa_nor)
fit <- lm(child~parent,galton)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child-mean(galton$child))^2)
sTot <- sum((galton$child-mu)^2)
sRes <- sum((lm(child~parent,galton)$residuals)^2)
sRes <- deviance(fit)
1-sRes/sTot
summary(fir)$r.squared
summary(fit)$r.squared
cor(galton$child,galton$parent)^2
ones <- rep(1,nrow(galton))
lm(child~parent,ones+parent-1,galton)
lm(child~parent,ones+galton-1,galton)
lm(child~parent,ones+parent -1,galton)
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child~1,galton)
head(trees)
fit <- lm(VOlume~Girth+Height+Constant -1,trees)
fit <- lm(Volume~Girth+Height+Constant -1,trees)
tress2 <- eliminate("Girth",trees)
trees2 <- eliminate("Girth",trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2)
)
lapply(list(fit, fit2))
lapply(list(fit, fit2), coef)
data("mtcars")
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
m_y <- mean(y)
sd((y-m_y)^2)
summary(lm(mpg~wt,mtcars))
?mtcars
summary(lm(wt~mpg,mtcars))
lm(wt~mpg,mtcars)
lm(mpg~wt,mtcars)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
sd(lm(y~x)$residuals)
mean(mtcars$mpg)
mean(mtcars$wt)
library(latex)
library(pdflatex)
install.package("pdflatex")
install.packages("pdflatex")
author: "Kamal Bakari"
#author: "Kamal Bakari"
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
load("C:/Users/Hp/Downloads/trainingModel.RData")
install.packages("pandoc")
install.packages("xtable")
library(xtable)
install.packages("slidify")
install_github("slidify","ramnathv")
install.packages("devtools")
install_github("slidify","ramnathv")
library(devtools)
install_github("slidify","ramnathv")
install_github("ramnathv/slidifyLibraries")
setwd("~/R/devdataprod/part2_slidify")
slidify('index.Rmd')
library(slidifyLibraries)
library(slidify)
install_github("ramnathv/slidify")
slidifyUI(index.Rmd)
getwd()
list.files()
slidifyUI("index.Rmd")
setwd("~/R/devdataprod/part1_shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
devtools::install_github('rstudio/shinyapps')
runApp()
install.packages("slidify")
install_github("ramnathv/slidify")
library(stringi)
install.packages(stringi)
install.packages("stringi")
install.packages("stringi")
install_github("ramnathv/slidify")
library(devtools)
install_github("ramnathv/slidify")
publish(title = 'Developing Data Product Part 2', 'index.html', host = 'rpubs')
library(slidify)
publish(title = 'Developing Data Product Part 2', 'index.html', host = 'rpubs')
getwd()
setwd("C:/Users/Hp/Documents/R/devdataprod/part2_slidify")
publish(title = 'Developing Data Product Part 2', 'index.html', host = 'rpubs')
publish(user = "Kjillahi", repo = "devdataprod_part2")
git config --global user.email "kamalbakari@yahoo.com"
publish(user = "Kjillahi", repo = "devdataprod_part2")
publish(user = "Kjillahi", repo = "devdataprod_part2")
